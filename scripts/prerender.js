const puppeteer = require('puppeteer');
const fs = require('fs');
const path = require('path');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Puppeteer
async function prerender() {
  let browser;
  
  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å Puppeteer...');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
    browser = await puppeteer.launch({
      headless: 'new',
      args: ['--no-sandbox', '--disable-setuid-sandbox']
    });
    
    const page = await browser.newPage();
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä viewport
    await page.setViewport({ width: 1920, height: 1080 });
    
    // –ß–∏—Ç–∞–µ–º HTML —Ñ–∞–π–ª –∏–∑ dist
    const htmlPath = path.resolve(__dirname, '../dist/index.html');
    const htmlContent = fs.readFileSync(htmlPath, 'utf8');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await page.setContent(htmlContent, { waitUntil: 'networkidle0' });
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    await page.waitForSelector('#root', { timeout: 10000 });
    
    // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
    await page.waitForTimeout(2000);
    
    // –ü–æ–ª—É—á–∞–µ–º –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω–Ω—ã–π HTML
    const renderedHtml = await page.content();
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞—Ç–Ω–æ –≤ dist
    fs.writeFileSync(htmlPath, renderedHtml);
    
    console.log('‚úÖ –ü—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log(`üìÅ HTML –æ–±–Ω–æ–≤–ª–µ–Ω –≤: ${htmlPath}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–µ:', error);
    process.exit(1);
  } finally {
    if (browser) {
      await browser.close();
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥
prerender();
