const fs = require('fs');
const path = require('path');

// –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
function simplePrerender() {
  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥...');
    
    // –ß–∏—Ç–∞–µ–º HTML —Ñ–∞–π–ª –∏–∑ dist
    const htmlPath = path.resolve(__dirname, '../dist/index.html');
    const htmlContent = fs.readFileSync(htmlPath, 'utf8');
    
    // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π HTML —Å –ø—Ä–µ—Ä–µ–Ω–¥–µ—Ä–µ–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
    const prerenderedContent = `
      <div id="root">
        <div style="width: 100vw; height: 100vh; position: relative; overflow: hidden; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;">
          <div style="position: absolute; top: 0; left: 0; width: 100vw; height: 100vh; display: flex; justify-content: center; align-items: center; background: white;">
            <canvas style="background: white; cursor: crosshair; touch-action: none;" width="1920" height="1080"></canvas>
          </div>
          <!-- –ü—Ä–µ—Ä–µ–Ω–¥–µ—Ä–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ -->
          <div style="position: absolute; top: 20px; left: 20px; background: rgba(255,255,255,0.9); padding: 10px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
            <h2 style="margin: 0; color: #333; font-size: 18px;">Kalyaka - –û–Ω–ª–∞–π–Ω –†–∏—Å–æ–≤–∞–ª–∫–∞</h2>
            <p style="margin: 5px 0 0 0; color: #666; font-size: 14px;">–ì–æ—Ç–æ–≤ –∫ —Ä–∏—Å–æ–≤–∞–Ω–∏—é...</p>
          </div>
        </div>
      </div>
    `;
    
    // –ó–∞–º–µ–Ω—è–µ–º –ø—É—Å—Ç–æ–π root –Ω–∞ –ø—Ä–µ—Ä–µ–Ω–¥–µ—Ä–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    const updatedHtml = htmlContent.replace(
      '<div id="root"></div>', 
      prerenderedContent
    );
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    fs.writeFileSync(htmlPath, updatedHtml);
    
    console.log('‚úÖ –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω!');
    console.log(`üìÅ HTML –æ–±–Ω–æ–≤–ª–µ–Ω –≤: ${htmlPath}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–µ:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥
simplePrerender();
